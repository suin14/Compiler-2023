int a(){
    int x=0;
    return (x;
}

void main(){
  int x =1;

  if (1<2
    printf(x)

const int a = 1;
const int b = 2 * 6 + 1, _a_b[2%2+1] = {5}, _a_3_b[2/2+1][2*1-1] = {{0},{3452%2+4*3}};
int c, d[2%2+1], _a_4_b[2/2+1][2*1-1] = {{0},{3452%2+4*3}}, z;
int _d_e =  1;
int glo_1, glo_2, glo_3, glo_4, glo_5, glo_6, glo_7, glo_8, glo_9;

int test_1(int var_1, int var_2[], int var_3[][1]){
	c = var_1 + var_2[0] + var_3[0][0] + 3452340 + 0;
	return c;
}

int test_2(int var_6){
	z = var_6;
	return (z + 6%4/2) * 2;
}

void test_3() {
}

void test_4() {
	return;
}

int test_5() {
	return 2;
}

int main() {
	const int f = 1;
	const int g = 2 * 6 + 1, _a_b_[2%2+1] = {a}, _a_3_b_d[2/2+1][2*1-1] = {{0},{3452%2+4*3}};
	int c, d[2%2+1], _a_4_b_d[2/2+1][2*1-1] = {{0},{3452%2+4*3}};
	int _d_e_g = (_a_3_b_d[0][0] + _a_4_b_d[0][0]) * b + 1;
	d[0] = 1;
	_a_4_b_d[0][0] = 1;
	c = _d_e_g + _a_4_b_d[0][0];
	c = +-+d[0];
	5 * 5 + 1;
	glo_1 = getint();
	glo_2 = getint();
	glo_3 = getint();
	glo_4 = getint();
	glo_5 = getint();
	glo_6 = getint();
	glo_7 = getint();
	glo_8 = getint();
	glo_9 = getint();
	c = -+-test_5() + test_1(c, d, _a_4_b_d) + test_1(_a_4_b_d[0][0], _a_4_b_d[0], _a_4_b_d) - test_1(_a_4_b_d[0][0], _a_4_b_d[0], _a_4_b_d);
	z = test_2(c);

	printf("19231076\n");
	printf(">/!~varg1 is:%d;~\n", glo_1);
	printf(">/!~varg2 is:%d;~\n", glo_2);
	printf(">/!~varg3 is:%d;~\n", glo_3);
	printf(">/!~varg4 is:%d;~\n", glo_4);
	printf(">/!~varg5 is:%d;~\n", glo_5);
	printf(">/!~varg6 is:%d;~\n", glo_6);
	printf(">/!~varg7 is:%d;~\n", glo_7);
	printf(">/!~varg8 is:%d;~\n", glo_8);
	printf(">/!~varg9 is:%d;~\n", glo_9);
	return 0;

    int c(int y) {
    return 0;
    }
    int main() {
    c(9;
    return 0;
    }

    // 测试c类错误未定义
    int ga,gb=10;
    int garr[2] = {1,2};

    int func1(int a, int b) {
    	int r = ga + a + b;
    	return r+c;	// 7
    }

    int func2(int a) {
    	int b = a + garr[1] + func1(ga,gb);
    	if(b > 0) b = b + func2(b-1);
    	return b;
    }

    int func3(int a, int b) {
    	int c = a+b;
    	d = c;			// 18
    	c = c + func4(a,b);		// 19
    	a = b + func1(a,z);		// 20
    	b = b + func2(z);	// 21
    	return 0;
    }

    int main() {
    	int a = 100;
    	{
    		int b = a+100;
    		printf("aaa");
    	}
    	b = a + 200;	// 31
    	if(a == 100) {
    		int b = ga+gb;
    		{
    			int c = ga+b;
    			c = func2(c);
    		}
    		b = b + c;		// 38
    		int d = b+a;
    	}
    	else {
    		printf("%d", d+3*4);	// 42
    		int a[2] = {1,2};
    		int d = a[0]+ga;
    		printf("i am back %d", d+3*4);
    		{
    			int e = func5();	// 47
    			d = func3(d, func2(z));	// 48
    			d = func6(2442) + e;	// 49
    		}
    		d = d + a[0];
    		e+3/2;	// 52
    	}
    	return 0;
    }

    int y[2];
    void f1(int a[]){
     return;
    }
    int f2(int a[][10])
    {
        f1(a[1]);
        return 1;
    }
    int main(){
    return 0;
    }

    const int c_var1_g = 1;
    const int c_var2_g = 2, c_var3_g = 3;
    const int D_g = 4, E_g = 5, F_g = 6;
    const int c_arr1_g[5] = {1, 2, 3, 4, 5};
    const int c_arr2_g[2][2] = {{6,7},{8,9}};
    int var1_g;
    int temp = 0;
    int arr1_g[5] = {1, 2, 3, 4, 5};
    int arr2_g[2][2] = {{6,7},{8,9}};

    void func2()
    {
    }


    int func1(int a, int b[], int c[][2])
    {
        int d = a*2 + b[0] % 2 + c[0][0] % 3;
        var1_g = d * (a + 2);
        ;
        func2();
        if (var1_g < 30) {
            printf("%d < 30.\n", var1_g);
        } else {
            printf("%d >= 30.\n", var1_g);
        }
        return 0;
    }

    void vfunc1(int a, int b[], int c[][2])
    {
        int d = a*2 + b[0] % 2 + c[0][0] % 3;
        var1_g = d * (a + 2);
        ;
        func2();
        if (var1_g < 30) {
            printf("%d < 30.\n", var1_g);
        } else {
            printf("%d >= 30.\n", var1_g);
        }
        return;
    }

    void func3(int a)
    {
        printf("DNMD\n");
        return;
    }

    void no_meaning_fun()
    {
        int var1 = 114514;
        const int c_var1 = 6;
        const int c_var2 = 6, c_var3 = 6;
        var1 = +var1;
        var1 = -11;

        (1+1);
        var1;
        3;
        2+5-var1;
        arr1_g[1];
        if(var1 / c_var1 < c_var2) ;
        if(var1 % c_var1 > c_var2) ;
        if(var1 % c_var1 >= c_var2) ;
        if(var1 % c_var1 <= c_var2) ;
        if (3 == 2) ;
        if (3 != 2) ;
        if(3 && 2) ;
        if (3 || 2) ;
        if(!temp || c_var1_g) ;
        +1;
        -1;
    }

    void for_loop()
    {
        int i, j;
        for (i = 0; i < 3; i = i + 1)
        {
            for (j = 0; j < 3; j = j + 1)
            {
            }
        }
        for(; ; ){
            break;
        }
        for(i = 0; ; ){
          break;
        }
        for(; i < 10; ){
          break;
        }
        for(; ; i = i + 1){
          break;
        }
        for(i = 0 ; i < 10; ){
          i = i + 1;
          continue;
        }
        for(; i < 10; i = i + 1){
        }
        for(i = 0; ; i = i + 1){
          if(i > 10){
            break;
          }
        }
    }

    int is_palindrome(int x)
    {

        int a = x, b = 0;
        ;
        {}
        {
            a = a+2;
        }
        if (1) {
            ;
        }
        if (a) {
            ;
        } else {
            ;
        }

        if (x >= 0 && x < 10)
            return 1;

        else
            return 0;



        for (;a > 0;a = a / 10)
        {
            b = b * 10;
            b = b + a % 10;
        }

        if (b == x)
        {
            return 1;
        }

        return 0;
    }

    int main()
    {
        int x;
        x = getint();
        printf("21373339\n");
        func3(1+2);
        printf("21373339\n");
        printf("21373339\n");

        const int c_var1 = 6;
        const int c_var2 = 6, c_var3 = 6;
        const int c_arr1[2] = {0,1};
        const int c_arr2[2][2] = {{1,1},{2,2}};

        int ui_var1;
        int ui_var2, ui_var3;
        int ui_arr1[5];
        int ui_arr2[2][2];

        int var1 = 114514;
        int var2 = 1919810, var3 = 810;
        int arr1[5] = {8,7,6,5,4};
        int arr2[2][2] = {{1,1},{2,2}};
        int pp[1] = {0};

        int fun11=0;
        fun11 = func1(1, arr1, arr2);
        printf("%d\n",fun11);
    	int i;
        for (i = 0; i < 2; i=i+1)
        {
            printf("%d\n", c_arr1[i]);
        }

        func2();

        {
            arr1_g[1] = 2;
            arr1_g[4] = c_var1_g;
            arr1_g[2] = arr1_g[1];
            arr2_g[1][1] = arr2_g[1][2];
            arr2_g[1][1] = (arr1_g[1] * 3);
        }



        printf("x equals %d\n", x);
        int ans = 0;
        ans = is_palindrome(x);
        //123456
        /*123456
        654321*/

        if (ans == 1)
            printf("%d is a palindrome\n", x);
        else
            printf("%d is not a palindrome\n", x);

        return 0;
    }
}